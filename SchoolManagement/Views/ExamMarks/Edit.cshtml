@model SchoolManagement.Models.Entity.ExamMark

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-header">
    <h1>
        Edit Exam Marks
        <small>
            <i class="ace-icon fa fa-angle-double-right"></i>
            @Html.ActionLink("Back to List", "Index", "ExamMarks", null, new { @class = "btn btn-info" })
        </small>
    </h1>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.SessionId, "Session", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SessionId", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SessionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentClassId, "Student Class", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentClassId", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SessionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignRollId, "Assign Roll", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AssignRollId", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SessionId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", null, "--Select--", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Theory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Theory, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Theory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mcq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mcq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Mcq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Practical, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Practical, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Practical, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $("#StudentClassId").change(function () {
        $.ajax({
            type: "GET",
            url: "/Common/GetRoll",
            data: { session: $('#SessionId').val(), studentClass: $('#StudentClassId').val() },
            datatype: "json",
            traditional: true,
            success: function (data) {
                $("#AssignRollId").empty();
                $.each(data, function (index, row) {

                    $("#AssignRollId").append("<Option value='" + row.Id + "'>" + row.Roll + "</Option>")

                });

            }
        });

        $.ajax({
            type: "GET",
            url: "/Common/GetCourse",
            data: { studentClass: $('#StudentClassId').val() },
            datatype: "json",
            traditional: true,
            success: function (data) {
                $("#CourseId").empty();
                $.each(data, function (index, row) {

                    $("#CourseId").append("<Option value='" + row.Id + "'>" + row.Name + "</Option>")

                });

            }
        });
    });
    </script>
}
